

import sys

from fontTools import ttLib
from nototools import font_data

import temporary_touchups


def apply_web_specific_fixes(font, family_name):
    """Apply fi
         'Medium', 'Medium Italic',
         'Bold', 'Bold Italic',
         'Black', 'Black Italic'])

    if 'Condensed' in font_data.get_name_records(font)[1]:
        family_name += ' Condensed'
    full_name = family_name + ' ' + subfamily_name

    # Family name
    font_data.set_name_record(font, 1, family_name)
    font_data.set_name_record(font, 16, family_name)

    # Unique identifier and full name
    font_data.set_name_record(font, 3, full_name)
    font_data.set_name_record(font, 4, full_name)
    font_data.set_name_record(font, 18, None)

    # PostScript name
    font_data.set_name_record(
        font, 6, (family_name+'-'+subfamily_name).replace(' ', ''))


def correct_font(source_font_name, target_font_name, family_name):
    """Corrects metrics and other meta information."""
    font = ttLib.TTFont(source_font_name)
    temporary_touchups.apply_temporary_fixes(font)
    apply_web_specific_fixes(font, family_name)
    font.save(target_font_name)


def main(argv):
    """Correct the font specified in the command line."""
    correct_font(argv[1], argv[2], argv[3])


if __name__ == "__main__":
    main(sys.argv)

    Status API Training Shop Blog About 

    © 2015 GitHub, Inc. Terms Privacy Security Contact 

